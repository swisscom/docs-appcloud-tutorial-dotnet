---
title: Define Environment Variables
owner: Tobias Fuhrimann
---

<strong><%= modified_date %></strong>

<%= vars.product_short %> lets you externalize configuration - storing data such as encryption keys or external resource addresses in <a href="../devguide/deploy-apps/environment-variable.html" target="_blank">environment variables</a>.

At runtime, environment variables are exposed to the application through its environment. You can use these for example to run your app in production mode setting the `APP_MODE` environment variable.

<pre class="terminal">
$ cf set-env my-dotnet-app APP_MODE production
Setting env variable 'APP_MODE' to 'production' for app my-dotnet-app in org MyOrg / space MySpace as user@smydomain.com...
OK
TIP: Use 'cf restage' to ensure your env variable changes take effect
</pre>

Then restage your app as suggested using

<pre class="terminal">
$ cf restage my-dotnet-app
Restaging app my-dotnet-app in org MyOrg / space MySpace as user@mydomain.com...
Creating container
Successfully created container
Downloading app package...

...
</pre>

All environment variables are accessed using the `Environment.GetEnvironmentVariable("APP_MODE")` method from within your .NET app.

<div style="text-align:center;margin:3em;">
  <a href="./bind-service.html" class="btn btn-primary">I've set my environment variable</a>
</div>
